.. _getting_started:

===============
Getting started
===============
PyTwin provides Pythonic access to Ansys Digital Twin Runtimes.
Twin Runtimes are generated using `Ansys Twin Builder and Twin Deployer <https://www.ansys.com/products/digital-twin/ansys-twin-builder>`_.

To use PyTwin, you must have a license of Ansys Twin Deployer
installed locally. PyTwin supports Twin Runtimes generated using 2023 R1 and later.

Define the Ansys License Server
-------------------------------
Ansys License Manager must have a license file with the ``twin_builder_deployer`` feature available.
Here is how you define the environment variable for specifying the location of Ansys License Manager:

.. code::

   ANSYSLMD_LICENSE_FILE={PORT_NUMBER}@{SERVER_NAME}


Twin Runtime dependencies
-------------------------
The ``pytwin`` package allows you to execute deployment workflows based on TWIN files
generated by `Ansys Twin Builder <https://www.ansys.com/products/digital-twin/ansys-twin-builder>`_.
TWIN files are generally made up of several types of models, including system-level models, ROMs,
third-party models, and FMU (Functional Mock-up Unit) files. Each of these models can have specific
runtime dependencies. For example, Modelica models cross-compiled with Ansys Twin Deployer on
Ubuntu 20.04 have a dependency on libgfortran5.

When executing Twin Runtimes through PyTwin on a specific environment, all dependencies of the
Twin Runtimes, including the ones of their constitutive models, must be properly installed
and made available in that environment.

Install the package
-------------------
The ``pytwin`` package supports Python 3.8 through Python 3.10 on Windows and Linux.

Install the latest release from `PyPi <https://pypi.org/project/pytwin/>`_
with this command:

.. code::

   pip install pytwin


If you plan on doing local *development* of PyTwin with Git, install
the latest release with this code:

.. code::

   git clone https://github.com/pyansys/pytwin.git
   cd pytwin
   pip install pip -U
   pip install -e .


Any changes that you make locally are reflected in your setup after you restart
the Python kernel.

Additional PyAnsys libraries
-----------------------------
You can install and use these additional PyAnsys libraries:

- `PyAEDT <https://aedt.docs.pyansys.com//>`_, which provides access to Ansys
  Twin Builder for model creation and the generation of Twin Runtimes.

